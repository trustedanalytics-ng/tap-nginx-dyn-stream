/**
 * Copyright (c) 2016 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Automatically generated by MockGen. DO NOT EDIT!
// Source: utils.go

package main

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of UtilAPI interface
type MockUtilAPI struct {
	ctrl     *gomock.Controller
	recorder *_MockUtilAPIRecorder
}

// Recorder for MockUtilAPI (not exported)
type _MockUtilAPIRecorder struct {
	mock *MockUtilAPI
}

func NewMockUtilAPI(ctrl *gomock.Controller) *MockUtilAPI {
	mock := &MockUtilAPI{ctrl: ctrl}
	mock.recorder = &_MockUtilAPIRecorder{mock}
	return mock
}

func (_m *MockUtilAPI) EXPECT() *_MockUtilAPIRecorder {
	return _m.recorder
}

func (_m *MockUtilAPI) ConvertStrPortsToUint16(portsStr []string) ([]uint16, error) {
	ret := _m.ctrl.Call(_m, "ConvertStrPortsToUint16", portsStr)
	ret0, _ := ret[0].([]uint16)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockUtilAPIRecorder) ConvertStrPortsToUint16(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ConvertStrPortsToUint16", arg0)
}

func (_m *MockUtilAPI) GetEth0IP() (string, error) {
	ret := _m.ctrl.Call(_m, "GetEth0IP")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockUtilAPIRecorder) GetEth0IP() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEth0IP")
}
